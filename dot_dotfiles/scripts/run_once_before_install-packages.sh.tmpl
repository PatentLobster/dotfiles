#!/bin/bash

info () {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

chez () {
if command -v chezmoi &> /dev/null; then
	chezmoi $@
else
	$HOME/bin/chezmoi $@
fi
}


function lobster() {
	if command -v lolcat &> /dev/null; then
		lobster_printer="lolcat"
	else
		lobster_printer="cat"
	fi
	eval $lobster_printer $(chez source-path)/dot_dotfiles/scripts/lobster
    printf "\n"
}



function get_latest_release() {
  curl --silent -L "https://api.github.com/repos/$1/releases/latest" | # Get latest release from GitHub api
    grep '"tag_name":' |                                            # Get tag line
    sed -E 's/.*"([^"]+)".*/\1/'                                    # Pluck JSON value
}

install_brew() {
    if test ! $(which brew); then
        info "Installing brew üç∫"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        {{ if ne .chezmoi.os "darwin" }}
            eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        {{ end }}
    fi

    if [ $(which brew) ]; then
      if [ ! $(which gum) ]; then
          info "Installing gum üîÆ"
          brew install gum
      fi
      {{ if eq .chezmoi.os "linux" }}
        {{ if eq .chezmoi.osRelease.id "amzn" }}
          {{      if eq .chezmoi.arch "amd64" }}
            wget "https://github.com/charmbracelet/gum/releases/download/$(get_latest_release "charmbracelet/gum")/gum_$(get_latest_release "charmbracelet/gum" | sed "s/v//g")_linux_amd64.rpm" -O /tmp/gum.rpm
          {{      else }}
            wget "https://github.com/charmbracelet/gum/releases/download/$(get_latest_release "charmbracelet/gum")/gum_$(get_latest_release "charmbracelet/gum" | sed "s/v//g")_linux_arm64.rpm" -O /tmp/gum.rpm
          {{      end }}
          rpm -i /tmp/gum.rpm
        {{ end }}
      {{ end }}
    fi
}

lobster
install_brew

{{ if eq .chezmoi.os "darwin" }}
# macOS-specific code

set +e
info "Installing brew packages üì¶"

    {{ if (.install_apps) }}
        brew bundle --no-lock --file=$(chez source-path)/dot_dotfiles/minimal.Brewfile
    {{ end }}
    {{ if (.install_casks) }}
        brew bundle --no-lock --file=$(chez source-path)/dot_dotfiles/casks.Brewfile
    {{ end }}
set -e


{{ else if eq .chezmoi.os "linux" }}
{{   if eq .chezmoi.osRelease.idLike "debian" }}
# Debian-specific code

info "Installing deps üöÄ"
sudo apt update
sudo apt install -y wget curl tmux zsh zoxide python3-dev python3-pip python3-setuptools

info "Installing brew packages üì¶"
brew install thefuck lolcat

{{      if eq .chezmoi.arch "amd64" }}
wget https://github.com/Peltoche/lsd/releases/download/$(get_latest_release "Peltoche/lsd")/lsd-musl_$(get_latest_release "Peltoche/lsd"):1_amd64.deb -O /tmp/lsd.deb
{{      else }}
wget https://github.com/Peltoche/lsd/releases/download/$(get_latest_release "Peltoche/lsd")/lsd-musl_$(get_latest_release "Peltoche/lsd" | cut -c2- )_arm64.deb -O /tmp/lsd.deb
{{      end }}

sudo dpkg -i /tmp/lsd.deb


{{   else if eq .chezmoi.osRelease.id "fedora" }}
# Fedora-specific code
info "Installing deps üöÄ"
sudo yum -y groupinstall 'Development Tools'
sudo dnf -y install zsh zoxide lsd tmux


info "Installing brew packages üì¶"
brew install thefuck lolcat


{{   else if eq .chezmoi.osRelease.id "amzn" }}

info "Installing deps üöÄ"
sudo yum -y groupinstall 'Development Tools'
sudo yum install -y zsh vim wget tar tmux python3-pip python3-devel gcc

pip3 install thefuck

{{      if eq .chezmoi.arch "arm64" }}
  wget "https://github.com/ajeetdsouza/zoxide/releases/download/$(get_latest_release "ajeetdsouza/zoxide")/zoxide-$(get_latest_release "ajeetdsouza/zoxide" | sed "s/v//g")-aarch64-unknown-linux-musl.tar.gz" -O /tmp/zoxide.tar.gz
{{      else }}
  wget "https://github.com/ajeetdsouza/zoxide/releases/download/$(get_latest_release "ajeetdsouza/zoxide")/zoxide-$(get_latest_release "ajeetdsouza/zoxide" | sed "s/v//g")-x86_64-unknown-linux-musl.tar.gz" -O /tmp/zoxide.tar.gz 
{{      end }}

tar -xf /tmp/zoxide.tar.gz -C /tmp
cp /tmp/zoxide /usr/local/bin

{{      if eq .chezmoi.arch "amd64" }}
wget "https://github.com/Peltoche/lsd/releases/download/$(get_latest_release "Peltoche/lsd")/lsd-$(get_latest_release "Peltoche/lsd")-x86_64-unknown-linux-musl.tar.gz" -O /tmp/lsd.tar.gz
{{      else }}
wget "https://github.com/Peltoche/lsd/releases/download/$(get_latest_release "Peltoche/lsd")/lsd-$(get_latest_release "Peltoche/lsd")-aarch64-unknown-linux-musl.tar.gz" -O /tmp/lsd.tar.gz
{{      end }}


tar -xf /tmp/lsd.tar.gz -C /tmp
cp /tmp/lsd*/lsd /usr/local/bin

{{   end }}
{{ end }}